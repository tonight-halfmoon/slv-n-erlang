{beam_file,server,
           [{async_client,3,11},
            {loop,1,6},
            {module_info,0,16},
            {module_info,1,18},
            {start,0,2},
            {sum_areas,2,4}],
           [{vsn,[237100153918662922575440818611528664640]}],
           [{options,[debug_info,{i,"src"},{i,"include"}]},
            {version,"7.1.5"},
            {source,"/home/rosemary/programming/erlang/slv-n-erlang/coding.dojo/math_server/asynchronous/src/server.erl"}],
           [{function,start,0,2,
                      [{label,1},
                       {line,1},
                       {func_info,{atom,server},{atom,start},0},
                       {label,2},
                       {allocate,0,0},
                       {move,{atom,areas},{x,1}},
                       {move,{integer,1},{x,2}},
                       {move,{atom,geometry},{x,0}},
                       {line,2},
                       {call_ext,3,{extfunc,erlang,make_fun,3}},
                       {test_heap,2,1},
                       {put_list,{x,0},nil,{x,2}},
                       {move,{atom,loop},{x,1}},
                       {move,{atom,server},{x,0}},
                       {line,2},
                       {call_ext_last,3,{extfunc,erlang,spawn,3},0}]},
            {function,sum_areas,2,4,
                      [{line,3},
                       {label,3},
                       {func_info,{atom,server},{atom,sum_areas},2},
                       {label,4},
                       {allocate_heap,0,6,2},
                       {bif,self,nofail,[],{x,2}},
                       {put_list,{x,1},nil,{x,3}},
                       {put_list,{x,0},{x,3},{x,0}},
                       {put_list,{x,2},{x,0},{x,2}},
                       {move,{atom,async_client},{x,1}},
                       {move,{atom,server},{x,0}},
                       {line,4},
                       {call_ext,3,{extfunc,erlang,spawn,3}},
                       {test_heap,3,1},
                       {put_tuple,2,{x,1}},
                       {put,{atom,ok}},
                       {put,{x,0}},
                       {move,{x,1},{x,0}},
                       {deallocate,0},
                       return]},
            {function,loop,1,6,
                      [{line,5},
                       {label,5},
                       {func_info,{atom,server},{atom,loop},1},
                       {label,6},
                       {allocate_zero,3,1},
                       {move,{x,0},{y,2}},
                       {line,6},
                       {label,7},
                       {loop_rec,{f,9},{x,0}},
                       {test,is_tagged_tuple,{f,8},[{x,0},3,{atom,request}]},
                       {get_tuple_element,{x,0},1,{y,1}},
                       remove_message,
                       {bif,self,nofail,[],{y,0}},
                       {move,{y,2},{x,1}},
                       {get_tuple_element,{x,0},2,{x,0}},
                       {line,7},
                       {call_fun,1},
                       {test_heap,4,1},
                       {put_tuple,3,{x,1}},
                       {put,{atom,reply}},
                       {put,{y,0}},
                       {put,{x,0}},
                       {move,{y,1},{x,0}},
                       {trim,2,1},
                       {line,7},
                       send,
                       {move,{y,0},{x,0}},
                       {call_last,1,{server,loop,1},1},
                       {label,8},
                       {loop_rec_end,{f,7}},
                       {label,9},
                       {wait,{f,7}}]},
            {function,async_client,3,11,
                      [{line,8},
                       {label,10},
                       {func_info,{atom,server},{atom,async_client},3},
                       {label,11},
                       {allocate_heap_zero,3,4,3},
                       {bif,self,nofail,[],{x,3}},
                       {move,{x,2},{y,2}},
                       {move,{x,1},{y,1}},
                       {move,{x,0},{y,0}},
                       {put_tuple,3,{x,1}},
                       {put,{atom,request}},
                       {put,{x,3}},
                       {put,{y,1}},
                       {move,{x,2},{x,0}},
                       {line,9},
                       send,
                       {line,10},
                       {label,12},
                       {loop_rec,{f,14},{x,0}},
                       {test,is_tagged_tuple,{f,13},[{x,0},3,{atom,reply}]},
                       {get_tuple_element,{x,0},1,{x,2}},
                       {test,is_eq_exact,{f,13},[{x,2},{y,2}]},
                       {get_tuple_element,{x,0},2,{x,1}},
                       remove_message,
                       {move,{y,0},{x,0}},
                       {line,11},
                       send,
                       {move,{y,1},{x,1}},
                       {move,{y,2},{x,2}},
                       {move,{y,0},{x,0}},
                       {call_last,3,{server,async_client,3},3},
                       {label,13},
                       {loop_rec_end,{f,12}},
                       {label,14},
                       {wait,{f,12}}]},
            {function,module_info,0,16,
                      [{line,0},
                       {label,15},
                       {func_info,{atom,server},{atom,module_info},0},
                       {label,16},
                       {move,{atom,server},{x,0}},
                       {line,0},
                       {call_ext_only,1,{extfunc,erlang,get_module_info,1}}]},
            {function,module_info,1,18,
                      [{line,0},
                       {label,17},
                       {func_info,{atom,server},{atom,module_info},1},
                       {label,18},
                       {move,{x,0},{x,1}},
                       {move,{atom,server},{x,0}},
                       {line,0},
                       {call_ext_only,2,
                                      {extfunc,erlang,get_module_info,2}}]}]}.
